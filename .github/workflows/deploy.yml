name: Deploy to Staging

on:
  push:
    branches: [ main ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
    
    - name: Deploy to Kubernetes
      run: |
        # Update image tags in manifests
        sed -i "s|ai-market-terminal/api:latest|${{ secrets.DOCKER_USERNAME }}/ai-market-api:${{ github.sha }}|g" infra/k8s/api.yaml
        sed -i "s|ai-market-terminal/web:latest|${{ secrets.DOCKER_USERNAME }}/ai-market-web:${{ github.sha }}|g" infra/k8s/web.yaml
        
        # Apply manifests
        kubectl apply -f infra/k8s/namespace.yaml
        kubectl apply -f infra/k8s/postgres.yaml
        kubectl apply -f infra/k8s/redis.yaml
        kubectl apply -f infra/k8s/api.yaml
        kubectl apply -f infra/k8s/web.yaml
        kubectl apply -f infra/k8s/ingress.yaml
        
        # Wait for deployment
        kubectl rollout status deployment/api -n ai-market-terminal
        kubectl rollout status deployment/web -n ai-market-terminal
    
    - name: Run smoke tests
      run: |
        # Wait for services to be ready
        sleep 30
        
        # Test API health
        curl -f https://staging.ai-market-terminal.com/api/health
        
        # Test web app
        curl -f https://staging.ai-market-terminal.com/
    
    - name: Notify deployment
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Deployment to staging successful! ðŸš€'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG_PROD }}" | base64 -d > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
    
    - name: Deploy to Production
      run: |
        # Update image tags in manifests
        sed -i "s|ai-market-terminal/api:latest|${{ secrets.DOCKER_USERNAME }}/ai-market-api:${{ github.sha }}|g" infra/k8s/api.yaml
        sed -i "s|ai-market-terminal/web:latest|${{ secrets.DOCKER_USERNAME }}/ai-market-web:${{ github.sha }}|g" infra/k8s/web.yaml
        
        # Apply manifests
        kubectl apply -f infra/k8s/namespace.yaml
        kubectl apply -f infra/k8s/postgres.yaml
        kubectl apply -f infra/k8s/redis.yaml
        kubectl apply -f infra/k8s/api.yaml
        kubectl apply -f infra/k8s/web.yaml
        kubectl apply -f infra/k8s/ingress.yaml
        
        # Wait for deployment
        kubectl rollout status deployment/api -n ai-market-terminal
        kubectl rollout status deployment/web -n ai-market-terminal
    
    - name: Run production tests
      run: |
        # Wait for services to be ready
        sleep 60
        
        # Test API health
        curl -f https://ai-market-terminal.com/api/health
        
        # Test web app
        curl -f https://ai-market-terminal.com/
    
    - name: Notify production deployment
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Deployment to production successful! ðŸŽ‰'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
